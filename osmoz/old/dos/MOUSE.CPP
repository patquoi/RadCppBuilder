#include <stdio.h>
#include <stdlib.h>
#include <graphics.h>
#include <dos.h>
#include "mouse.h"

const Matrix Curs[31]={{0x3FFF,0x1FFF,0x0FFF,0x07FF,0x03FF,0x01FF,0x00FF,0x007F,
/*FlŠche*/              0x003F,0x007F,0x01FF,0x01FF,0x90FF,0xF0FF,0xF87F,0xF8FF,
                        0x0000,0x4000,0x6000,0x7000,0x7800,0x7C00,0x7E00,0x7F00,
                        0x7F80,0x7E00,0x7C00,0x6C00,0x0600,0x0600,0x0300,0x0200},

/*"+1"*/
{65528, 65520, 65504, 57792, 57728, 57840,    48,    48,    48,    48, 57840, 57840, 57840, 65520, 65520, 65520,
     0,     6,    14,    30,  3078,  3078,  3078, 32646, 32646,  3078,  3078,  3078,     6,     6,     6,     0},

/*Quadruple flŠche*/   {0xFEFF,0xFC7F,0xF83F,0xF01F,0xE00F,0xC007,0x8003,0x0001,
                        0x8003,0xC007,0xE00F,0xF01F,0xF83F,0xFC7F,0xFEFF,0xFFFF,
                        0x0000,0x0100,0x0380,0x0100,0x0100,0x0100,0x2108,0x7EFC,
                        0x2108,0x0100,0x0100,0x0100,0x0380,0x0100,0x0000,0x0000},

/*Doigt*/              {0x1FFF,0x0FFF,0x87FF,0xC7FF,0xC07F,0xE00F,0xE003,0xF001,
                        0xB001,0x1801,0x8801,0x8001,0xC000,0xE000,0xF000,0xFE00,
                        0x4000,0x6000,0x3000,0x1000,0x1800,0x0D00,0x0EA0,0x07F4,
                        0x07FC,0x43FC,0x23FC,0x37FC,0x1FFE,0x0FFE,0x01FE,0x0000},

/*Sablier*/            {0x0000,0x0000,0x0000,0x0000,0xE003,0xF007,0xF80F,0xFC1F,
                        0xF80F,0xF007,0xE003,0xE003,0x0000,0x0000,0x0000,0x0000,
                        0x7FFF,0x4001,0x7FFF,0x0FB8,0x0F58,0x06B0,0x0360,0x0140,
                        0x0360,0x06B0,0x0D58,0x0AA8,0x0D58,0x7FFF,0x4001,0x7FFF},

 {63519,61471,57351,49415,33537, 1985, 1985, 1985,    1,    1,    1, 1985, 1985, 1985, 4035,65535,
   2016, 2016, 7800, 7800,30750,30750,30750,30750,32766,32766,30750,30750,30750,30750,    0,    0},
 {32775,    7,    1, 1985, 1985, 1985,    3,    7,    1, 1985, 1985, 1985,    3,    7,   15,65535,
  32760,32760,30750,30750,30750,30750,32760,32760,30750,30750,30750,30750,32760,32760,    0,    0},
 {57351,49159,32769, 1985, 1985, 1985, 1987, 2047, 2047, 2047, 2017, 1985,    3,49159,49167,65535,
   8184, 8184,30750,30750,30750,30750,30720,30720,30720,30720,30750,30750, 8184, 8184,    0,    0},
 {32799,   31,    7, 1799, 1793, 1985, 1985, 1985, 1985, 1985, 1923, 1799,   15,   31,   63,65535,
  32736,32736,30840,30840,30750,30750,30750,30750,30750,30750,30840,30840,32736,32736,    0,    0},
 {32769,    1,    3, 2047, 2047, 2047,    7,    7,   15, 2047, 2047, 2047,    1,    1,    3,65535,
  32766,32766,30720,30720,30720,30720,32760,32760,30720,30720,30720,30720,32766,32766,    0,    0},
 {32769,    1,    3, 2047, 2047, 2047,    7,    7,   15, 2047, 2047, 2047, 2047, 2047, 4095,65535,
  32766,32766,30720,30720,30720,30720,32760,32760,30720,30720,30720,30720,30720,30720,    0,    0},
 {57351,49159,32769, 1985, 1987, 2047, 1921, 1793, 1793, 1985, 1985, 1985,    1,49153,49155,65535,
   8184, 8184,30750,30750,30720,30720,30846,30846,30750,30750,30750,30750, 8190, 8190,    0,    0},
 {34785, 1985, 1985, 1985, 1985, 1985,    1,    1,    1, 1985, 1985, 1985, 1985, 1985, 4035,65535,
  30750,30750,30750,30750,30750,30750,32766,32766,30750,30750,30750,30750,30750,30750,    0,    0},
 {57375,49183,49215,61567,61567,61567,61567,61567,61567,61567,61567,61567,57375,49183,49215,65535,
   8160, 8160, 1920, 1920, 1920, 1920, 1920, 1920, 1920, 1920, 1920, 1920, 8160, 8160,    0,    0},
 {65025,64513,64513,65473,65473,65473,65473,65473,34753, 1985, 1985, 1985,    3,49159,49167,65535,
    510,  510,   30,   30,   30,   30,   30,   30,30750,30750,30750,30750, 8184, 8184,    0,    0},
 {34785, 1985, 1923, 1799, 1551, 1055,   63,  127,   31, 1055, 1031, 1799, 1793, 1985, 4035,65535,
  30750,30750,30840,30840,31200,31200,32640,32640,31200,31200,30840,30840,30750,30750,    0,    0},
 {34815, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,    1,    1,    3,65535,
  30720,30720,30720,30720,30720,30720,30720,30720,30720,30720,30720,30720,32766,32766,    0,    0},
 {34785, 1985,  385,  257,    1,    1,    1, 1089, 1217, 1985, 1985, 1985, 1985, 1985, 4035,65535,
  30750,30750,32382,32382,32766,32766,31134,31134,30750,30750,30750,30750,30750,30750,    0,    0},
 {34785, 1985,  449,  449,   65,   65,    1, 1025, 1025, 1793, 1793, 1985, 1985, 1985, 4035,65535,
  30750,30750,32286,32286,32670,32670,31230,31230,30846,30846,30750,30750,30750,30750,    0,    0},
 {57351,49159,32769, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,    3,49159,49167,65535,
   8184, 8184,30750,30750,30750,30750,30750,30750,30750,30750,30750,30750, 8184, 8184,    0,    0},
 {32775,    7,    1, 1985, 1985, 1985,    3,    7,   15, 2047, 2047, 2047, 2047, 2047, 4095,65535,
  32760,32760,30750,30750,30750,30750,32760,32760,30720,30720,30720,30720,30720,30720,    0,    0},
 {57351,49159,32769, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,    3,49159,49153,65473,
   8184, 8184,30750,30750,30750,30750,30750,30750,30750,30750,30750,30750, 8184, 8184,   30,   30},
 {32775,    7,    1, 1985, 1985, 1985,    3,    7,    1, 1985, 1985, 1985, 1985, 1985, 4035,65535,
  32760,32760,30750,30750,30750,30750,32760,32760,30750,30750,30750,30750,30750,30750,    0,    0},
 {57375,49183,32775, 1799,  271,49663,49279,61567,61471,64543,33799, 1799,   15,49183,49215,65535,
   8160, 8160,30840,30840, 7680, 7680, 1920, 1920,  480,  480,30840,30840, 8160, 8160,    0,    0},
 {32775,    7,   15,61567,61567,61567,61567,61567,61567,61567,61567,61567,61567,61567,61695,65535,
  32760,32760, 1920, 1920, 1920, 1920, 1920, 1920, 1920, 1920, 1920, 1920, 1920, 1920,    0,    0},
 {34785, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,    3,49159,49167,65535,
  30750,30750,30750,30750,30750,30750,30750,30750,30750,30750,30750,30750, 8184, 8184,    0,    0},
 {34785, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,  387,49415,49167,61471,61503,65535,
  30750,30750,30750,30750,30750,30750,30750,30750,30750,30750, 7800, 7800, 2016, 2016,    0,    0},
 {34785, 1985, 1985, 1985, 1985, 1985, 1601, 1089,    1,    1,    1,  257,  769, 1985, 4035,65535,
  30750,30750,30750,30750,30750,30750,31134,31134,32766,32766,32382,32382,30750,30750,    0,    0},
 {34785, 1985, 1985, 1985,  387,49415,49167,61471,57351,49415,33537, 1985, 1985, 1985, 4035,65535,
  30750,30750,30750,30750, 7800, 7800, 2016, 2016, 7800, 7800,30750,30750,30750,30750,    0,    0},
 {34808, 2032, 2032, 2032,  480,49601,49155,61447,61455,64543,64543,64543,64543,64543,64575,65535,
  30727,30727,30727,30727, 7710, 7710, 2040, 2040,  480,  480,  480,  480,  480,  480,    0,    0},
 {32769,    1,    3,65287,65039,64543,63551,61567,57599,49663,33791, 2047,    1,    1,    3,65535,
  32766,32766,  120,  120,  480,  480, 1920, 1920, 7680, 7680,30720,30720,32766,32766,    0,    0}};



mouse::mouse()
 {
  r.r_ax=0x0000;
  intr(0x33,&r);
  Buttons=r.r_bx;
  NumCurs=0;
  if (!r.r_ax)
   {
    closegraph();
    printf("\aSouris non install‚e\n\r");
    exit(1);
   }
 }

void mouse::CursorOn()
 {
  r.r_ax=0x0001;
  intr(0x33,&r);
 }

void mouse::CursorOff()
 {
  r.r_ax=0x0002;
  intr(0x33,&r);
 }

void mouse::GetMouse(unsigned *x, unsigned *y, unsigned *LeftButton, unsigned *RightButton, unsigned *MidButton)
 {
  r.r_ax=0x0003;
  intr(0x33,&r);
  *x=r.r_cx;
  *y=r.r_dx;
  *LeftButton=((r.r_bx&0x0001)>0);
  *RightButton=((r.r_bx&0x0002)>0);
  *MidButton=((r.r_bx&0x0004)>0);
 }

int mouse::CursorCond(unsigned x1, unsigned y1, unsigned x2, unsigned y2)
 {
  unsigned xs,ys;
  r.r_ax=0x0003;
  intr(0x33,&r);
  xs=r.r_cx;
  ys=r.r_dx;
  return((x1<=xs)&&(xs<=x2)&&(y1<=ys)&&(ys<=y2));
 }

int mouse::ButtonPressed()
 {
  r.r_ax=0x0003;
  intr(0x33,&r);
  return((r.r_bx>0));
 }

void mouse::RepeatUntilNoPress()
 {
  do
   {
    r.r_ax=0x0003;
    intr(0x33,&r);
   }
  while(r.r_bx!=0);
 }

void mouse::GetButtons(unsigned *left,unsigned *right,unsigned *medium)
 {
  r.r_ax=0x0003;
  intr(0x33,&r);
  *left=((r.r_bx&0x0001)>0);
  *right=((r.r_bx&0x0002)>0);
  *medium=((r.r_bx&0x0004)>0);
 }

void mouse::MoveMouse(unsigned x, unsigned y)
 {
  r.r_cx=x;
  r.r_dx=y;
  r.r_ax=0x0004;
  intr(0x33,&r);
 }

void mouse::WinMouse(unsigned x1, unsigned y1, unsigned x2, unsigned y2)
 {
  r.r_cx=x1;
  r.r_dx=x2;
  r.r_ax=0x0007;
  intr(0x33,&r);
  r.r_cx=y1;
  r.r_dx=y2;
  r.r_ax=0x0008;
  intr(0x33,&r);
 }

void mouse::SetMouseCursor(unsigned XRef, unsigned YRef, int Curseur)
 {
  NumCurs=Curseur;
  r.r_bx=XRef;
  r.r_cx=YRef;
  r.r_ax=0x0009;
  r.r_es=FP_SEG(Curs[Curseur]);
  r.r_dx=FP_OFF(Curs[Curseur]);
  intr(0x33,&r);
 }
